name: Chart CI

on:
  workflow_call:
    inputs:
      chart-dir:
        description: "Directory holding your Chart"
        required: true
        type: string 
        default: "chart"
      chart-values:
          description: "Chart values file that will be used for the testing and scanning steps"
          required: false
          type: string 
          default: "chart/values.yaml"
      kubernetes-version:
        description: "Version of the target Kubernetes cluster the Chart will run on"
        required: false
        type: string 
        default: "1.24.2"


jobs:
  helm-ct-lint:
    name: Helm CT - Chart Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run ct lint
        run: |
          ct lint \
            --target-branch ${{ github.event.repository.default_branch }} \
            --chart-dirs ${{ inputs.chart-dir }}

  helm-schema:
    needs: helm-ct-lint
    name: Helm Schema JSON - Chart Schema Generation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate values schema json
      uses: losisin/helm-values-schema-json-action@v1.5.3
      with:
        input: ${{ inputs.chart-dir }}/values.yaml
        output: ${{ inputs.chart-dir }}/values.schema.json

    - name: Cache chart dir
      id: cache-dir
      uses: actions/cache@v4
      with:
        path: ${{ inputs.chart-dir }}
        key: ${{ github.sha }}-chart

  kubeconform:
    name: Kubeconform - Chart Validation
    needs: helm-schema
    runs-on: ubuntu-latest
    steps:
      - name: Cache chart dir
        id: cache-dir
        uses: actions/cache@v4
        with:
          path: ${{ inputs.chart-dir }}
          key: ${{ github.sha }}-chart

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Setup Helm plugins
        run: |
          helm plugin install https://github.com/jtyr/kubeconform-helm

      - name: Run Kubeconform check
        run: |
          helm kubeconform ${{ inputs.chart-dir }} \
            --schema-location ${{ inputs.chart-dir }}/values.schema.json \
            --output json \
            --kubernetes-version ${{ inputs.kubernetes-version }} \
            --strict \
            --summary


  polaris:
    name: Polaris - Chart Scan
    needs: helm-schema
    runs-on: ubuntu-latest
    steps:
      - name: Cache chart dir
        id: cache-dir
        uses: actions/cache@v4
        with:
          path: ${{ inputs.chart-dir }}
          key: ${{ github.sha }}-chart

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run Polaris Check
        run: |
          mkdir -p .local/bin
          curl -s https://api.github.com/repos/FairwindsOps/polaris/releases/latest | \
            jq '.assets[] | select(.name=="polaris_linux_amd64.tar.gz")'.browser_download_url | \
            xargs curl -s -L | \
          tar xvz -C .local/bin polaris
          echo "$PWD/.local/bin" >> $GITHUB_PATH

      - name: Run chart-testing (polaris)
        run: |
          polaris audit \
            --only-show-failed-tests \
            --set-exit-code-below-score=80 \
            --set-exit-code-on-danger=true \
            --helm-chart ${{ inputs.chart-dir }} \
            --helm-values ${{ inputs.chart-dir }}/values.yaml \
            --format=pretty \
            --color=true


  trivy:
    name: Trivy - Chart Vulnerability Scan
    needs: helm-schema
    runs-on: ubuntu-latest
    steps:
      - name: Cache chart dir
        id: cache-dir
        uses: actions/cache@v4
        with:
          path: ${{ inputs.chart-dir }}
          key: ${{ github.sha }}-chart

      - name: DEBUG - List chart dir
        run: |
          ls -al ${{ inputs.chart-dir }}
          ls -al ${{ inputs.chart-dir }}/charts

      - name: Build Trivy Vulnerability report
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_HELM_KUBE_VERSION: ${{ inputs.kubernetes-version }}
          TRIVY_HELM_VALUES: ${{ inputs.kubernetes-version }}
        with:
          scan-type: 'config'
          exit-code: '0'
          ignore-unfixed: false
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-vuln-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-vuln-results.sarif' 

      - name: Run Trivy Vulnerability scan
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_HELM_KUBE_VERSION: ${{ inputs.kubernetes-version }}
          # Overriding env vars from previous steps for them not to interfere with the scan
          TRIVY_FORMAT: 'table'
          TRIVY_OUTPUT: ''
        with:
          scan-type: 'config'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL'


  helm-ct-test:
    name: Helm CT - Chart Testing
    runs-on: ubuntu-latest
    needs: [polaris,trivy,kubeconform]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache chart dir
        id: cache-dir
        uses: actions/cache@v4
        with:
          path: ${{ inputs.chart-dir }}
          key: ${{ github.sha }}-chart

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.10.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install \
            --target-branch ${{ github.event.repository.default_branch }} \
            --chart-dirs ${{ inputs.chart-dir }}


  helm-docs:
    name: Helm Docs - Chart Documentation Generation
    needs: helm-ct-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Cache chart dir
      id: cache-dir
      uses: actions/cache@v4
      with:
        path: ${{ inputs.chart-dir }}
        key: ${{ github.sha }}-chart

    - name: Helm-docs
      uses: losisin/helm-docs-github-action@v1.3.3
      with:
        chart-search-root: ${{ inputs.chart-dir }}
        values-file : ./values.yaml
        output-file: ./README.md
        template-files: ./README.md.gotpl
        sort-values-order: file


  helm-chart-releaser:
    needs: helm-docs
    name: Helm CR - Chart Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache chart dir
        id: cache-dir
        uses: actions/cache@v4
        with:
          path: ${{ inputs.chart-dir }}
          key: ${{ github.sha }}-chart

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
        
      ### DEV specific steps ###
      - name: Add release suffix - DEV
        if: github.ref == 'refs/heads/dev'
        run: |
          yq -i '.version |= . + "-dev"' ${{ inputs.chart-dir }}/Chart.yaml
  
      - name: Run chart-releaser - DEV
        if: github.ref == 'refs/heads/dev'
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true
          mark_as_latest: false
        
      ### PROD release (tag) specific steps ###
      - name: Run chart-releaser - MAIN
        if: github.ref == 'refs/heads/main'
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true
          mark_as_latest: true